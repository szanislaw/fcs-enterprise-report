### Task
Generate a valid SQLite SQL query to answer the following question:
{question}

### Database Schema
- **properties(prop_id, prop_name)**
- **staff(stf_id, stf_name, nationality, job_title, employment_type, prop_id)**
- **payroll(pay_id, stf_id, pay_period_start, pay_period_end, pay_frequency, gross_pay, net_pay, cpf_contribution, bonuses)**
- **cleaning_orders(co_id, stf_id, cleaning_service_type, prop_id, location_uuid, location_name, start_time, complete_time, duration, inspector_name, inspection_result)**
- **service_requests(sr_id, guest_name, location, service_category, service_item, quantity, remarks, status, created_time, deadline_time, completed_time, assigned_stf_id)**

### Rules
- Use `stf_id` for staff, not `staff_id`.
- Staff ↔ Properties: join on `staff.prop_id = properties.prop_id`.
- Staff ↔ Payroll: join on `staff.stf_id = payroll.stf_id`.
- Cleaning orders ↔ Staff: join on `cleaning_orders.stf_id = staff.stf_id`.
- Service requests ↔ Staff: join on `service_requests.assigned_stf_id = staff.stf_id`.
- A failed inspection = `inspection_result <> 'Pass'`.
- Count foreign staff using `staff.nationality <> 'Singaporean'`.
- **Redirected calls are service requests where `service_item = 'Call Redirect'` (case-insensitive).**
- For "rooms with aircon issues", match `(LOWER(service_item) LIKE '%aircon%' OR LOWER(remarks) LIKE '%aircon%')`. Do not join to cleaning_orders.
- Always group by the relevant entity when counting (staff, property, room).

### Answer
Here is the SQL query that answers `{question}`:
