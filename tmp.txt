### Task
Generate a SQL query to answer the following manager-style question:
{question}

### Database Schema
Use the provided schema as ground truth when choosing tables and columns:
{schema}

### Important Rules
1) **SQLite Only**:
   - Use `LOWER(col) LIKE LOWER('%text%')` instead of ILIKE.
   - Use `strftime('%Y', col)` and `strftime('%m', col)` for year/month.
   - Use `date(col)` for truncating to date; avoid `date_trunc` and `INTERVAL`.
   - Avoid double quotes; use bare identifiers or backticks.
2) **Time Windows**:
   - If the question says “today/yesterday/last N days/weeks/months”, translate into SQLite date ranges with `date('now', ...)`.
   - If timing is vague, default to the **last 30 days**.
3) **Entity Joins (very important)**:
   - **Service requests**: prefer `vw_service_requests_enriched` (if present). Otherwise use `room_service_requests` and map staff via:
     `room_service_requests.assigned_to_user` ≈ `staff.staff_name` (case-insensitive) and match `property_id`.
   - **Cleaning and inspections**: prefer `vw_cleaning_events` or `vw_rooms_excluded` (if present). Otherwise join:
       `co_cleaning_order_detail.cleaning_uuid` → `co_matrix_detail.cleaning_uuid`
       and use `co_cleaning_order_inspection` for inspection remarks/results.
   - **Properties**: filter by `property_id`/`property_uuid` when the hotel/property is mentioned.
4) **Rooms vs Locations**:
   - When a manager says “room 6811”, treat it as `room_service_requests.location = '6811'` (exact number string).
   - When cleaning tables use `location_uuid`, do not guess the room number unless a mapping is available in a view.
5) **Aggregations**:
   - For rankings/top/bottom, include `ORDER BY` and a `LIMIT` when asked for a list (“top 10”, etc.).
   - For “rate” or “percentage”, compute numerator/denominator explicitly and alias the result as `pct` or `rate`.
6) **Column Hygiene**:
   - Use real column names only (as shown in schema). If a guessed column doesn’t exist, switch to a column that does.
   - Prefer **simple joins** and **clear filters** over overly complex SQL.

### Answer
Return only the final SQL query that answers `{question}`; no commentary.
